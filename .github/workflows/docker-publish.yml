#name: Docker Publish
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build_and_push:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        with:
#          path: ~/.cache/docker
#          key: ${{ runner.os }}-docker-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-docker-
#
#      - name: Build frontend image
#        run: |
#          docker build -t zyreael/frontend:latest -f utils/frontend.Dockerfile .
#
#      - name: Build backend image
#        run: |
#          docker build -t zyreael/backend:latest -f utils/backend.Dockerfile .
#
#      - name: Push frontend image
#        run: |
#          docker push zyreael/frontend:latest
#
#      - name: Push backend image
#        run: |
#          docker push zyreael/backend:latest
#
#      - name: Logout from Docker Hub
#        run: |
#          docker logout


name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job pour l'analyse du Backend (Java avec Maven)
  sonarcloud-backend:
    name: SonarCloud Backend Analysis (Maven)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd backend
          echo "Listing files"
          ls 
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Aikyreael_Evaluation_ORCHESTRATION-DE-CONTENEUR

  # Job pour l'analyse du Frontend (Angular)
  sonarcloud-frontend:
    name: SonarCloud Frontend Analysis (Angular)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Navigate to frontend directory
        run: cd frontend

      - name: Install dependencies (Frontend)
        run: npm install --legacy-peer-deps

        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build and analyze with SonarCloud
        run: npm run build --if-present && sonar-scanner -Dsonar.projectKey=Aikyreael_Evaluation_ORCHESTRATION-DE-CONTENEUR

